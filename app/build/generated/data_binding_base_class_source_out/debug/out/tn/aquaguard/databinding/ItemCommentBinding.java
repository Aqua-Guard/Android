// Generated by view binder compiler. Do not edit!
package tn.aquaguard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import tn.aquaguard.R;

public final class ItemCommentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ShapeableImageView commentAvatar;

  @NonNull
  public final ImageView commentDelete;

  @NonNull
  public final ImageView commentEdit;

  @NonNull
  public final TextView commentText;

  @NonNull
  public final TextView commentUsername;

  private ItemCommentBinding(@NonNull LinearLayout rootView,
      @NonNull ShapeableImageView commentAvatar, @NonNull ImageView commentDelete,
      @NonNull ImageView commentEdit, @NonNull TextView commentText,
      @NonNull TextView commentUsername) {
    this.rootView = rootView;
    this.commentAvatar = commentAvatar;
    this.commentDelete = commentDelete;
    this.commentEdit = commentEdit;
    this.commentText = commentText;
    this.commentUsername = commentUsername;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCommentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCommentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_comment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCommentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.comment_avatar;
      ShapeableImageView commentAvatar = ViewBindings.findChildViewById(rootView, id);
      if (commentAvatar == null) {
        break missingId;
      }

      id = R.id.comment_delete;
      ImageView commentDelete = ViewBindings.findChildViewById(rootView, id);
      if (commentDelete == null) {
        break missingId;
      }

      id = R.id.comment_edit;
      ImageView commentEdit = ViewBindings.findChildViewById(rootView, id);
      if (commentEdit == null) {
        break missingId;
      }

      id = R.id.comment_text;
      TextView commentText = ViewBindings.findChildViewById(rootView, id);
      if (commentText == null) {
        break missingId;
      }

      id = R.id.comment_username;
      TextView commentUsername = ViewBindings.findChildViewById(rootView, id);
      if (commentUsername == null) {
        break missingId;
      }

      return new ItemCommentBinding((LinearLayout) rootView, commentAvatar, commentDelete,
          commentEdit, commentText, commentUsername);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
