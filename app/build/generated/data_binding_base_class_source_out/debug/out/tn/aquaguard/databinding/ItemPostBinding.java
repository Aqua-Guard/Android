// Generated by view binder compiler. Do not edit!
package tn.aquaguard.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import tn.aquaguard.R;

public final class ItemPostBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final EditText commentInput;

  @NonNull
  public final RecyclerView commentsRecyclerView;

  @NonNull
  public final TextView description;

  @NonNull
  public final ImageView infoIcon;

  @NonNull
  public final TextView nbcomments;

  @NonNull
  public final TextView nblikes;

  @NonNull
  public final TextView nbshare;

  @NonNull
  public final ImageView postimage;

  @NonNull
  public final ImageButton sendCommentButton;

  @NonNull
  public final TextView userRole;

  @NonNull
  public final ImageView userimage;

  @NonNull
  public final TextView username;

  private ItemPostBinding(@NonNull MaterialCardView rootView, @NonNull EditText commentInput,
      @NonNull RecyclerView commentsRecyclerView, @NonNull TextView description,
      @NonNull ImageView infoIcon, @NonNull TextView nbcomments, @NonNull TextView nblikes,
      @NonNull TextView nbshare, @NonNull ImageView postimage,
      @NonNull ImageButton sendCommentButton, @NonNull TextView userRole,
      @NonNull ImageView userimage, @NonNull TextView username) {
    this.rootView = rootView;
    this.commentInput = commentInput;
    this.commentsRecyclerView = commentsRecyclerView;
    this.description = description;
    this.infoIcon = infoIcon;
    this.nbcomments = nbcomments;
    this.nblikes = nblikes;
    this.nbshare = nbshare;
    this.postimage = postimage;
    this.sendCommentButton = sendCommentButton;
    this.userRole = userRole;
    this.userimage = userimage;
    this.username = username;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemPostBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemPostBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_post, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemPostBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.commentInput;
      EditText commentInput = ViewBindings.findChildViewById(rootView, id);
      if (commentInput == null) {
        break missingId;
      }

      id = R.id.commentsRecyclerView;
      RecyclerView commentsRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (commentsRecyclerView == null) {
        break missingId;
      }

      id = R.id.description;
      TextView description = ViewBindings.findChildViewById(rootView, id);
      if (description == null) {
        break missingId;
      }

      id = R.id.info_icon;
      ImageView infoIcon = ViewBindings.findChildViewById(rootView, id);
      if (infoIcon == null) {
        break missingId;
      }

      id = R.id.nbcomments;
      TextView nbcomments = ViewBindings.findChildViewById(rootView, id);
      if (nbcomments == null) {
        break missingId;
      }

      id = R.id.nblikes;
      TextView nblikes = ViewBindings.findChildViewById(rootView, id);
      if (nblikes == null) {
        break missingId;
      }

      id = R.id.nbshare;
      TextView nbshare = ViewBindings.findChildViewById(rootView, id);
      if (nbshare == null) {
        break missingId;
      }

      id = R.id.postimage;
      ImageView postimage = ViewBindings.findChildViewById(rootView, id);
      if (postimage == null) {
        break missingId;
      }

      id = R.id.sendCommentButton;
      ImageButton sendCommentButton = ViewBindings.findChildViewById(rootView, id);
      if (sendCommentButton == null) {
        break missingId;
      }

      id = R.id.user_role;
      TextView userRole = ViewBindings.findChildViewById(rootView, id);
      if (userRole == null) {
        break missingId;
      }

      id = R.id.userimage;
      ImageView userimage = ViewBindings.findChildViewById(rootView, id);
      if (userimage == null) {
        break missingId;
      }

      id = R.id.username;
      TextView username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new ItemPostBinding((MaterialCardView) rootView, commentInput, commentsRecyclerView,
          description, infoIcon, nbcomments, nblikes, nbshare, postimage, sendCommentButton,
          userRole, userimage, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
